; generated by drom from package skeleton 'library'

(library
  (name cobol_parser)
  (public_name cobol_parser)
  (wrapped true)
  ; use field 'dune-libraries' to add libraries without opam deps
  (libraries menhirLib ez_file ebcdic_lib cobol_ptree cobol_preproc cobol_common str)
  ; use field 'dune-flags' to set this value
  (flags (:standard))
  ; use field 'dune-stanzas' to add more stanzas here
  (preprocess (pps ppx_deriving.show))
  
  )

(ocamllex text_categorizer)

(rule
    (targets version.ml)
    (deps (:script version.mlt) package.toml)
    (action (with-stdout-to %{targets} (run %{ocaml} unix.cma %{script}))))

(documentation
  (package cobol_parser))

; use field 'dune-trailer' to add more stuff here
(menhir (modules grammar_tokens grammar_common grammar)
        (merge_into grammar)
        (flags --inspection --cmly --table --strict

               --external-tokens Grammar_tokens
               --unused-tokens))


(menhir (modules grammar_tokens)
        (flags --inspection --table --only-tokens))

(rule
  (targets text_keywords.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./keywords/gen_keywords.exe} %{deps}
            --external-tokens Grammar_tokens --with-is-intrinsic))))

(rule
  (targets grammar_expect.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./expect/gen_expect.exe} %{deps}
            --external-tokens Grammar_tokens
            --extra-default-attribute-name recovery
            --nel-module Cobol_common.Basics.NEL))))

(rule
  (targets grammar_post_actions.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./post/gen_post_actions.exe} %{deps}))))

(rule
  (targets grammar_recover.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./recover/gen_recover.exe} %{deps}))))

(rule
  (targets grammar_contexts.ml)
  (enabled_if (<> %{profile} "release"))
  (deps grammar.cmly)
  (mode promote)
  (action
    (with-stdout-to %{targets}
      (run %{exe:./context/gen_contexts.exe} %{deps}
        --external-tokens Grammar_tokens))))

(rule
  (targets grammar_context.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./context/gen_context.exe} %{deps}))))

(rule
  (targets grammar_printer.ml)
  (enabled_if (<> %{profile} "release"))
  (deps    grammar.cmly)
  (mode    promote)
  (action
    (with-stdout-to %{targets}
       (run %{exe:./printer/gen_printer.exe} %{deps}))))

