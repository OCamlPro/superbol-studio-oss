       IDENTIFICATION DIVISION.
       PROGRAM-ID. CREATEDB.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 NUM           PIC 9(6).

       EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01 DB-SOURCE     PIC  X(50) VALUE SPACE.
       01 DB-USER       PIC  X(30) VALUE SPACE.
       01 DB-PASS       PIC  X(20) VALUE SPACE.
       EXEC SQL END DECLARE SECTION END-EXEC.

       EXEC SQL INCLUDE SQLCA END-EXEC.

       PROCEDURE DIVISION.

       MAIN.

      * NOTE: IT SEEMS SQL ERROR HANDLERS ALWAYS CAUSE
      * THE PROGRAM TO BE TERMINATED AFTER BEING CALLED
           EXEC SQL WHENEVER SQLERROR PERFORM SQL_ERROR END-EXEC
           EXEC SQL WHENEVER SQLWARNING PERFORM SQL_ERROR END-EXEC

           DISPLAY "CONNECTING"

           ACCEPT DB-SOURCE FROM ENVIRONMENT "COB_DBSOURCE"
           ACCEPT DB-USER FROM ENVIRONMENT "COB_DBUSER"
           ACCEPT DB-PASS FROM ENVIRONMENT "COB_DBPASS"

           EXEC SQL
             CONNECT TO :DB-SOURCE USER :DB-USER USING :DB-PASS
           END-EXEC

           DISPLAY "DROPPING TABLE IF PRESENT"

           EXEC SQL
             DROP TABLE IF EXISTS NUMBERS
           END-EXEC

           DISPLAY "CREATING TABLE"

           EXEC SQL
             CREATE TABLE NUMBERS (
               NUMBER NUMERIC(6,0) NOT NULL,
               CONSTRAINT PK_NUMBER PRIMARY KEY (NUMBER)
             )
           END-EXEC

           DISPLAY "INSERTING NUMBERS"

           PERFORM VARYING NUM FROM 1 BY 1 UNTIL NUM > 10000
             EXEC SQL
               INSERT INTO NUMBERS VALUES (:NUM)
             END-EXEC
           END-PERFORM

           DISPLAY "DISCONNECTING"

           EXEC SQL
             DISCONNECT ALL
           END-EXEC

           DISPLAY "DONE"
           STOP RUN.

       SQL_ERROR.
           DISPLAY "SQL ERROR !"
           DISPLAY "SQLCODE: " SQLCODE
           DISPLAY "ERRCODE: " SQLSTATE
           DISPLAY SQLERRMC

