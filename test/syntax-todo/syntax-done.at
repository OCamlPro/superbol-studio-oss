
# All of these tests have been tested as parsable by superbol-free


AT_SETUP([Check run])
AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 ONE   PIC 9 VALUE 1.
       01 TWO   PIC 9 VALUE 2.
       01 THREE PIC 9 VALUE 3.
       PROCEDURE        DIVISION.
           IF THREE = ONE AND TWO OR THREE
               DISPLAY "OK"
               END-DISPLAY
           END-IF.
           IF 3 = 1 OR 2 AND 3
               DISPLAY "NO"
               END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([$SUPERBOL check --recovery=false --std=mf --source-format=xcard prog.cob], [0], [Checking `prog.cob'
])

AT_CLEANUP



AT_SETUP([ACCEPT AT ... AUTO])
AT_DATA([prog.cob], [
identification division.
program-id.             acas-get-params.
 procedure division.
     accept   menu-reply at 0644 with foreground-color 6 auto.
])

AT_CHECK([$SUPERBOL check --recovery=false --free --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP



AT_SETUP([DISPLAY ... BLINK])
AT_DATA([prog.cob], [
identification division.
program-id.             acas-get-params.
 procedure division.
     display "Waiting < sec " at line ws-lines col 1 blink.
])

AT_CHECK([$SUPERBOL check --recovery=false --free --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP



AT_SETUP([MF Z LITERAL])
AT_DATA([prog.cob], [
       program-id. GetFlyerLevel.
       procedure division.
             MOVE Z'regular mail' TO WS-PRINT-MSG-METHOD.
       end program.
])

AT_CHECK([$SUPERBOL check --recovery=false --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP



AT_SETUP([MF ENTRY LITERAL USING])
AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. customer.
       PROCEDURE DIVISION.
       Initialise Section.
       Entry "Initialise" Using Dsc-Control-Block Data-Block.
])

AT_CHECK([$SUPERBOL check --recovery=false --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP




AT_SETUP([MF LENGTH in DIVIDE])
AT_DATA([prog.cob], [
       program-id. GetFlyerLevel.
       procedure division.
           DIVIDE LENGTH BANK-SCREEN20-FIELD
             INTO LENGTH OF BANK-SCREEN20-DATA-R
               GIVING WS-SUB1-LIMIT.
       end program.
])

AT_CHECK([$SUPERBOL check --recovery=false --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP




AT_SETUP([MF ALTERNATE KEY IS])
AT_DATA([prog.cob], [
       program-id. GetFlyerLevel.
       SELECT BNKACC-NDX
                  ASSIGN       TO NDXACC
                  ORGANIZATION IS INDEXED
                  ACCESS MODE  IS SEQUENTIAL
                  RECORD KEY   IS BAC-REC-ACCNO
                  ALTERNATE KEY IS BAC-REC-PID WITH DUPLICATES
                  FILE STATUS  IS WS-BNKACC-NDX-STATUS.
])

AT_CHECK([$SUPERBOL check --recovery=false --std=mf prog.cob], [0],
[Checking `prog.cob'
])

AT_CLEANUP
