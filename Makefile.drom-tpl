# -*- Makefile -*-
# Generated by "drom project"
.PHONY: all build build-deps fmt fmt-check install dev-deps test
.PHONY: clean distclean

TARGET_PLAT ?= linux
DUNE = opam exec -- dune
DUNE_ARGS ?= --root=$$(pwd)
DUNE_CROSS_ARGS = $(strip $(if $(filter  win32,${TARGET_PLAT}),-x windows)	\
			  $(if $(filter darwin,${TARGET_PLAT}),-x osx))

VERSION = !{version}
DEV_DEPS := merlin ocamlformat odoc![if:gen:test] ppx_expect ppx_inline_test![fi]

![if:gen:docs]![if:gen:sphinx]
SPHINX_TARGET:=_drom/docs/!{sphinx-target}
![fi]
ODOC_TARGET:=_drom/docs/!{odoc-target}/.
![fi]

# Use these non-generated files to include more rules here (and
# Makefile.trailer at the end)
-include Makefile.header
-include Makefile.config

all: build

build:
	./scripts/before.sh build
ifeq ($(TARGET_PLAT)_$(BUILD_STATIC_EXECS),linux_true)
	./scripts/static-build.sh
else
	${DUNE} build!{build-profile} ${DUNE_ARGS} ${DUNE_CROSS_ARGS} @install
endif
	./scripts/copy-bin.sh !{packages}
	./scripts/after.sh build

build-deps:
	if ! [ -e _opam ]; then \
	   opam switch create . !{edition} --no-install ; \
	fi
	opam install ./opam/*.opam --deps-only

![if:gen:docs]
.PHONY: doc-common odoc view![if:gen:sphinx] sphinx![fi]
doc-common: build
	mkdir -p _drom/docs
	rsync -auv docs/. _drom/docs/.
![if:gen:sphinx]
sphinx: doc-common
	./scripts/before.sh sphinx ${SPHINX_TARGET}
	sphinx-build sphinx ${SPHINX_TARGET}
	./scripts/after.sh sphinx  ${SPHINX_TARGET}
![fi]
odoc: doc-common
	mkdir -p ${ODOC_TARGET}
	./scripts/before.sh odoc ${ODOC_TARGET}
	${DUNE} build ${DUNE_ARGS} @doc
	rsync -auv --delete _build/default/_doc/_html/. ${ODOC_TARGET}
	./scripts/after.sh odoc ${ODOC_TARGET}

doc: doc-common odoc![if:gen:sphinx] sphinx![fi]

view:
	xdg-open file://$$(pwd)/_drom/docs/index.html
![fi]
fmt:
	${DUNE} build ${DUNE_ARGS} @fmt --auto-promote

fmt-check:
	${DUNE} build ${DUNE_ARGS} @fmt

install:
	opam pin -y --no-action -k path .
	opam install -y .

opam:
	opam pin -k path .

uninstall:
	opam uninstall .

dev-deps:
	opam install autofonce
	opam install ./opam/*.opam ./test/opam/*.opam --deps-only --with-doc --with-test

test:
	./scripts/before.sh test
	${DUNE} build ${DUNE_ARGS} ${DUNE_CROSS_ARGS} @runtest
	${MAKE} test-syntax
	./scripts/after.sh test

clean:
	rm -rf _build
	./scripts/after.sh clean

distclean: clean
	rm -rf _opam _drom
	./scripts/after.sh distclean

-include Makefile.trailer
!(makefile-trailer)
